import React, { useState } from 'react';

const BACKEND_URL = 'YOUR_GOOGLE_SCRIPT_URL';

export default function App() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [characterName, setCharacterName] = useState('');
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [token, setToken] = useState(0);
  const [item, setItem] = useState(null);
  const [view, setView] = useState('login');
  const [adminEmail, setAdminEmail] = useState('');
  const [adminTokens, setAdminTokens] = useState(0);

  const handleAuth = async (action) => {
    const params = new URLSearchParams({ action, email, password });
    const res = await fetch(BACKEND_URL, { method: 'POST', body: params });
    const text = await res.text();
    if (text === 'LoginSuccess' || text === 'Registered') {
      setIsLoggedIn(true);
      setView(email === 'admin@example.com' ? 'admin' : 'dashboard');
      setToken(5);
    } else {
      alert(text);
    }
  };

  const handleDraw = async () => {
    if (!characterName) return alert('‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏∏‡πà‡∏°!');
    const url = `${BACKEND_URL}?email=${email}&character=${characterName}`;
    const res = await fetch(url);
    const data = await res.json();
    if (data === 'NotEnoughTokens') {
      alert('Token ‡πÑ‡∏°‡πà‡∏û‡∏≠!');
    } else {
      setItem(data);
      setToken((prev) => prev - 1);
    }
  };

  const handleAdminAddToken = async () => {
    const params = new URLSearchParams({
      action: 'addtoken',
      email: adminEmail,
      token: adminTokens,
    });
    const res = await fetch(BACKEND_URL, { method: 'POST', body: params });
    const text = await res.text();
    alert(text);
  };

  return (
    <div>
      {view === 'login' && (
        <>
          <h2>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</h2>
          <input placeholder="‡∏≠‡∏µ‡πÄ‡∏°‡∏•" value={email} onChange={(e) => setEmail(e.target.value)} />
          <input placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" type="password" value={password} onChange={(e) => setPassword(e.target.value)} />
          <button onClick={() => handleAuth('login')}>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</button>
          <p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ? <span onClick={() => setView('register')}>‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</span></p>
        </>
      )}
      {view === 'register' && (
        <>
          <h2>‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</h2>
          <input placeholder="‡∏≠‡∏µ‡πÄ‡∏°‡∏•" value={email} onChange={(e) => setEmail(e.target.value)} />
          <input placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" type="password" value={password} onChange={(e) => setPassword(e.target.value)} />
          <button onClick={() => handleAuth('register')}>‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</button>
          <p>‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß? <span onClick={() => setView('login')}>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</span></p>
        </>
      )}
      {view === 'dashboard' && (
        <>
          <h2>üéÆ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö!</h2>
          <p>Token ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {token}</p>
          <input placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì" value={characterName} onChange={(e) => setCharacterName(e.target.value)} />
          <button onClick={handleDraw}>‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° üîÆ</button>
          {item && <p>üéÅ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö: {item.item} ‡∏à‡∏≤‡∏Å {item.character}</p>}
          <button onClick={() => { setIsLoggedIn(false); setView('login'); }}>‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</button>
        </>
      )}
      {view === 'admin' && (
        <>
          <h2>üõ†Ô∏è ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô - ‡πÄ‡∏ï‡∏¥‡∏° Token</h2>
          <input placeholder="‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ" value={adminEmail} onChange={(e) => setAdminEmail(e.target.value)} />
          <input placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Token" type="number" value={adminTokens} onChange={(e) => setAdminTokens(Number(e.target.value))} />
          <button onClick={handleAdminAddToken}>‡πÄ‡∏ï‡∏¥‡∏° Token</button>
          <button onClick={() => { setIsLoggedIn(false); setView('login'); }}>‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</button>
        </>
      )}
    </div>
  );
}